// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/unmango/cloudflare-operator/pkg/client (interfaces: Client)
//
// Generated by this command:
//
//	mockgen -destination ../testing/client_test.go -package testing . Client
//

// Package testing is a generated GoMock package.
package testing

import (
	context "context"
	reflect "reflect"

	zero_trust "github.com/cloudflare/cloudflare-go/v4/zero_trust"
	gomock "go.uber.org/mock/gomock"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
	isgomock struct{}
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// CreateTunnel mocks base method.
func (m *MockClient) CreateTunnel(ctx context.Context, params zero_trust.TunnelCloudflaredNewParams) (*zero_trust.TunnelCloudflaredNewResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTunnel", ctx, params)
	ret0, _ := ret[0].(*zero_trust.TunnelCloudflaredNewResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTunnel indicates an expected call of CreateTunnel.
func (mr *MockClientMockRecorder) CreateTunnel(ctx, params any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTunnel", reflect.TypeOf((*MockClient)(nil).CreateTunnel), ctx, params)
}
